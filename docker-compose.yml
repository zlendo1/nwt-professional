services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 15s
      retries: 5
    networks:
      - microservices-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "10001:10001"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10001/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - microservices-network

  centralized-configuration:
    build: ./centralized-configuration
    ports:
      - "8888:8888"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 5s
    networks:
      - microservices-network

  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    depends_on:
      centralized-configuration:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 25s
    networks:
      - microservices-network

  user-management-service:
    build: ./user-management-service
    ports:
      - "8025:8025"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    depends_on:
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8025/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - microservices-network

  test-skills-service:
    build: ./test-skills-service
    ports:
      - "8081:8081"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    depends_on:
      api-gateway:
        condition: service_healthy
      user-management-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - microservices-network

  job-service:
    build: ./job-service
    ports:
      - "8082:8082"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    depends_on:
      api-gateway:
        condition: service_healthy
      user-management-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - microservices-network

  content-service:
    build: ./content-service
    ports:
      - "8083:8083"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    depends_on:
      api-gateway:
        condition: service_healthy
      user-management-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - microservices-network

  communication-service:
    build: ./communication-service
    ports:
      - "8084:8084"
    environment:
      - JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport -XX:+UnlockExperimentalVMOptions -Dmanagement.metrics.binders.processor.enabled=false
    depends_on:
      api-gateway:
        condition: service_healthy
      user-management-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 30s
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

